{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA,MAAM;AACN,uBAAuB;AACvB;AACA;;AAEA,2BAA2B;AAC3B,4DAA4D;AAC5D;AACA,oBAAoB;AACpB;;AAEA,gCAAgC;AAChC;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,yEAAyE;AACzE,0FAA0F;;AAE1F,2DAA2D;AAC3D;;AAEA;AACA;AACA,2DAA2D;AAC3D,kEAAkE;AAClE,yFAAyF;AACzF,kBAAkB;AAClB,uDAAuD;AACvD;AACA;;AAEA;AACA,wDAAwD;AACxD,iBAAiB;AACjB,qDAAqD;;AAErD;AACA,aAAa;AACb,SAAS;AACT;AACA,wEAAwE;AACxE,yFAAyF;;AAEzF,+CAA+C;AAC/C;;AAEA,gDAAgD;;AAEhD,4CAA4C;AAC5C,sDAAsD;AACtD,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI;;;;;;;;;;;;;;;ACzGgC;;AAEnD;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,gCAAgC;AAChC;AACA;AACA,wBAAwB;AACxB;AACA;AACA,mBAAmB;AACnB;AACA,6CAA6C;AAC7C,6CAA6C;AAC7C;AACA,cAAc;AACd,qFAAqF;AACrF;;AAEA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA,yCAAyC;AACzC;AACA;;AAEA;AACA,IAAI,+DAAW;AACf;AACA,4BAA4B,mCAAmC,OAAO;AACtE,6FAA6F;AAC7F,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC7E4B;AACA;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B;AACA,KAAK;;AAEL,kCAAkC;AAClC,iDAAiD;AACjD,gCAAgC;;AAEhC;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,mEAAmE;;AAEnE,mDAAmD;AACnD,mDAAmD;;AAEnD,gFAAgF;AAChF,4EAA4E;;AAE5E,+CAA+C;;AAE/C,gCAAgC;AAChC,uDAAuD;AACvD;AACA,gBAAgB;;AAEhB,+EAA+E;;AAE/E,iDAAiD;;AAEjD,qCAAqC;AACrC;AACA;AACA;AACA,wBAAwB;AACxB;AACA,oBAAoB;AACpB,YAAY,4DAAQ;AACpB,gCAAgC;AAChC;AACA,sDAAsD;AACtD;AACA,iBAAiB;AACjB;AACA,iBAAiB,kBAAkB;AACnC,kCAAkC;AAClC,iBAAiB;;AAEjB;AACA;AACA;AACA,yDAAyD;AACzD,qCAAqC;AACrC;AACA,qBAAqB;AACrB;AACA;AACA,gBAAgB;AAChB,SAAS;AACT;;AAEA,wCAAwC;AACxC;AACA;AACA,QAAQ,iDAAS;;AAEjB;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;;AAEA;AACA;AACA;;AAEA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACvGpB;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,uCAAuC;;AAEvC;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;;;AAGA,kCAAkC;AAClC;AACA,KAAK;;;AAGL,4DAA4D;AAC5D,6CAA6C;AAC7C,+EAA+E;AAC/E;AACA;AACA,KAAK;AACL;AACA,uEAAuE;AACvE;AACA;AACA,KAAK;;AAEL,mCAAmC;AACnC;AACA;AACA,qEAAqE;AACrE;AACA;;AAEA,0DAA0D;AAC1D;;AAEA,iEAAe,KAAK,EAAC;AACC;;;;;;;;;;;;;;;ACrDtB,kBAAkB,sFAAsF;;AAExG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;;;AAG9D,wBAAwB;AACxB,oBAAoB;;AAEpB,8BAA8B;AAC9B,gCAAgC,cAAc,GAAG;AACjD,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,6CAA6C;;AAE7C;AACA,mCAAmC;AACnC,KAAK;;AAEL;;AAEA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB,oBAAoB,mBAAmB;AACvC,kDAAkD;AAClD,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB,UAAU;AACV;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,sEAAsE;AACtE,wBAAwB;AACxB,UAAU;AACV;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,KAAK;AACL,2BAA2B;AAC3B;AACA;;AAEA;AACA;;AAEA,yDAAyD,OAAO;;AAEhE;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA,wCAAwC;AACxC;;;AAGA;AACA;;AAEA,iCAAiC;AACjC,mCAAmC,cAAc,GAAG;AACpD,SAAS;AACT;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;;AAEA,gEAAgE;AAChE,2DAA2D;;AAE3D,qCAAqC;AACrC,yCAAyC,WAAW,GAAG;AACvD,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;;AAEA,iEAAe,MAAM;;;;;;;;;;;;;;ACpMrB;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC,sCAAsC;AACtC;AACA;AACA,SAAS;AACT,+BAA+B;AAC/B;AACA,SAAS;AACT;AACA;;;AAGA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA,uCAAuC;AACvC;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA,iEAAe,IAAI;;;;;;;;;;;;;;ACtCnB;;AAEA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,uBAAuB;;AAEvB;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,KAAK;;;;;;;;;;;;;;;ACnDpB,uCAAuC;AACvC,mCAAmC;AACnC;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,6BAA6B;AAC7B;;AAEA,oCAAoC;AACpC,kCAAkC;AAClC;AACA,2CAA2C,IAAI,YAAY,WAAW;AACtE;AACA,6BAA6B;AAC7B;;AAEuB;;;;;;;UCnBvB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACA;AACE;AACA;AACE;AACF;AACA;AACQ;;AAE5C;AACA,wCAAwC,yDAAS,kCAAkC;AACnF,IAAI,yDAAI;AACR,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,E","sources":["webpack://food-2version/./js/modules/calc.js","webpack://food-2version/./js/modules/cards.js","webpack://food-2version/./js/modules/forms.js","webpack://food-2version/./js/modules/modal.js","webpack://food-2version/./js/modules/slides.js","webpack://food-2version/./js/modules/tabs.js","webpack://food-2version/./js/modules/timer.js","webpack://food-2version/./js/services/services.js","webpack://food-2version/webpack/bootstrap","webpack://food-2version/webpack/runtime/define property getters","webpack://food-2version/webpack/runtime/hasOwnProperty shorthand","webpack://food-2version/webpack/runtime/make namespace object","webpack://food-2version/./js/script.js"],"sourcesContent":["function calc() {\n    const result = document.querySelector('.calculating__result span');\n\n    let sex, height, weight, age, ratio;\n\n    if (localStorage.getItem('sex')) {\n        sex = localStorage.getItem('sex');\n    } else {\n        sex = 'female'; //уст переменные в дефолтные значения для корректного отображения на сайте\n        localStorage.setItem('sex', 'female');\n    }\n\n    if (localStorage.getItem('ratio')) {\n        ratio = localStorage.getItem('ratio');\n    } else {\n        ratio = 1.375; //коэфициент активности (взят из источника)\n        localStorage.setItem('ratio', '1.375');\n    }\n\n    function calcTotal() { //запускаем каждый раз когда было изменено значение в любом инпуте\n        if (!sex || !height || !weight || !age || !ratio) { //если не заполнен пол, или вес, или рост и тд то выводим прочерк\n            result.textContent = '____';\n            return; //вызываем return, чтобы прервать функцию\n        }\n\n        if (sex === 'female') { // расчет для женщин\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\n        } else { // расчет для мужчин\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\n        }\n    }\n    calcTotal();\n\n    function initLocalSettings(selector, activeClass) {\n        const elements = document.querySelectorAll(selector);\n\n        elements.forEach(elem => {\n            elem.classList.remove(activeClass);\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\n                elem.classList.add(activeClass);\n            }\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\n                elem.classList.add(activeClass);\n            }\n        });\n    }\n\n    initLocalSettings('#gender div', 'calculating__choose-item_active'); //запускаем ф-цию исп id и класс активности из верстки\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active'); //запускаем ф-цию исп класс физ активности и класс активности из верстки\n\n    function getStaticInformation(selector, activeClass) { //получаем инфо из статических инпутов с активностью, когда на них нажали мы исп это значение\n        const elements = document.querySelectorAll(selector);\n\n        elements.forEach(elem => {\n            elem.addEventListener('click', (e) => {\n                if (e.target.getAttribute('data-ratio')) { //если у элем есть data-аттрибут \n                    ratio = +e.target.getAttribute('data-ratio'); //мы обращаемся к ratio и исп аттрибут data-ratio\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio')); //запоминаем что пользователь выбрал определенные параметры\n                } else {\n                    sex = e.target.getAttribute('id'); //если у элемента нет аттрибута тогда рабоатем с id\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\n                }\n\n                elements.forEach(elem => {\n                    elem.classList.remove(activeClass); //сначала эл избавляется от класса активности\n                });\n                e.target.classList.add(activeClass); //после удаления класса активности добавляем новый\n\n                calcTotal();\n            });\n        });\n    }\n    getStaticInformation('#gender', 'calculating__choose-item_active'); //запускаем ф-цию исп id и класс активности из верстки\n    getStaticInformation('.calculating__choose_big', 'calculating__choose-item_active'); //запускаем ф-цию исп класс физ активности и класс активности из верстки\n\n    function getDynamicInformation(selector) { //получаем инфо из динамически меняющихся инпутов(рост вес возраст)\n        const input = document.querySelector(selector);\n\n        input.addEventListener('input', () => { //когда пользватель что то вводит в инпут выполняем след действия \n\n            if (input.value.match(/\\D/g)) { //проверяем чтобы пользователь введет тоько числа\n                input.style.border = '1px solid red'; //ставим красную обводку если что то пошло не так\n            } else {\n                input.style.border = 'none';\n            }\n\n            switch (input.getAttribute('id')) {\n                case 'height':\n                    height = +input.value;\n                    break;\n                case 'weight':\n                    weight = +input.value;\n                    break;\n                case 'age':\n                    age = +input.value;\n                    break;\n            }\n            calcTotal();\n        });\n    }\n    getDynamicInformation('#height');\n    getDynamicInformation('#weight');\n    getDynamicInformation('#age');\n}\n\nexport default calc;","import { getResourse } from '../services/services';\n\nfunction cards() {\n    class MenuCard {\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) { //classes-классы, добавленные с помощью rest-operator\n            this.src = src;\n            this.alt = alt;\n            this.title = title;\n            this.descr = descr;\n            this.price = price;\n            this.classes = classes; //массив\n            this.parent = document.querySelector(parentSelector);\n            this.transfer = 27; //свойство для перевода валюты\n            this.changeToUAH();\n        }\n        changeToUAH() { //метод перевода перевода в гривну\n            this.price = this.price * this.transfer;\n        }\n        render() { //создаем верстку, куда помещаются элементы\n            let element = document.createElement('div');\n            if (this.classes.length === 0) { //если не было передано какой либо класс, \n                this.classes = 'menu__item'; //устанавливаем дефолтный класс\n                element.classList.add(this.classes);\n            } else {\n                this.classes.forEach(className => element.classList.add(className)); //className-каждый эл внутри массива classes\n            }\n\n            element.innerHTML = `\n                <img src=${this.src} alt=${this.alt}>\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n                <div class=\"menu__item-descr\">${this.descr}</div>\n                <div class=\"menu__item-divider\"></div>\n                <div class=\"menu__item-price\">\n                    <div class=\"menu__item-cost\">Цена:</div>\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div> \n                </div>\n            `;\n            this.parent.append(element); //помещаем только что полученный element в parent\n        }\n    }\n\n    // Сокращенный вариант создания элементов на странице, то что раньше было new MenuCard\n    getResourse('http://localhost:3000/menu') //при помощи сервера(запроса) получаю массив с обьектами(расположен в db.json),\n        .then(data => {\n            data.forEach(({ img, altimg, title, descr, price, }) => { //далее перебираем его и те обьекты которые внутри, их деструктуризируем по отдельным  частям, \n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render(); //эти части передаю в конструктор, который создает новую карточку на странице и рендерит ее \n            });\n        });\n\n    // new MenuCard( //аргументами передаем те значения, которые были в верстке\n    //     \"img/tabs/vegy.jpg\", //src\n    //     \"vegy\", //alt\n    //     'Меню \"Фитнес\"', //title\n    //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!', //descr\n    //     9, //число задано в БД\n    //     '.menu .container', //parentSelector\n    // ).render();\n\n    // new MenuCard( //аргументами передаем те значения, которые были в верстке\n    //     \"img/tabs/elite.jpg\", //src\n    //     \"elite\", //alt\n    //     'Меню “Премиум”', //title\n    //     'В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!', //descr\n    //     14, //число задано в БД\n    //     '.menu .container', //parentSelector\n    // ).render();\n\n    // new MenuCard( //аргументами передаем те значения, которые были в верстке\n    //     \"img/tabs/post.jpg\", //src\n    //     \"post\", //alt\n    //     'Меню \"Постное\"', //title\n    //     'Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.', //descr\n    //     21, //число задано в БД\n    //     '.menu .container', //parentSelector\n    // ).render();\n}\n\nexport default cards;","import { closeModal, openModal } from './modal';\nimport { postData } from '../services/services';\n\nfunction forms(formsSelector, modalTimerId) {\n    let forms = document.querySelectorAll(formsSelector);\n    let message = {\n        loading: 'icons/spinner.svg',\n        success: 'от души, братик. на связи',\n        failure: 'че за нах?!'\n    };\n\n    forms.forEach(item => { //подвязываем функцию postData, которая является обработчиком событий при отправке под каждую из форм\n        bindPostData(item);\n    });\n\n    function bindPostData(form) { //отвечает за почтинг данных\n        form.addEventListener('submit', (e) => { //submit срабатывает каждый раз когда мы пытаемся отправить форму\n            e.preventDefault(); //отменяем перезагрузку страницы после отправки формы\n\n            let statusMessage = document.createElement('img');\n            statusMessage.src = message.loading; //вставляем изображение спинера из icons/spinner\n            statusMessage.textContent = message.loading;\n            statusMessage.style.cssText = `\n                display: block;\n                margin: 0 auto;\n            `;\n            form.insertAdjacentElement('afterend', statusMessage); //добавляем спиннер к форме, но меняем место его появления, аргументами передаем сначала где будет появляться, потом что именно будет появляться\n\n            // let request = new XMLHttpRequest(); //отправка данных исп XMLHttpRequest\n            // request.open('POST', 'server.php'); //сначала всегда вызывается open() чтобы настроить запрос, 2-й арг это путь на который будем ссылаться\n\n            // request.setRequestHeader('Content-type', 'multipart/form-data'); заголовки, которые сообщают серверу, какой именно контент приходит. Когда исп XMLHttpRequest заголовки устанавливать не нужно, они ставятся автоматически\n            //request.setRequestHeader('Content-type', 'application/json'); //отправляем данные в JSON\n\n            let formData = new FormData(form); //помещаем данные которые заполнил пользователь в форме мы получили в js и могли отправить на сервер\n\n            // let object = {}; //превращаем FormData в JSON\n            // formData.forEach(function(value, key) { //на основании данных, которые были в FormData сформируем object при помощи перебора \n            //     object[key] = value;\n            // });\n\n            let json = JSON.stringify(Object.fromEntries(formData.entries())); //превращаем нашщ обьект в массив с массивами при помощи formData.entries(), потом конвертируем обратно в обьект при помощи Object.fromEntries() и передаем в postData вторым аргументом \n\n            //let json = JSON.stringify(object); //конвертируем обычный обьект formData в JSON и помещаем его в request.send()\n\n            // fetch('server.php', { //исп fetch вместо XMLHttpRequest для отправки формы \n            //         method: 'POST',\n            //         headers: {\n            //             'Content-type': 'application/json'\n            //         },\n            //         body: JSON.stringify(object)\n            //     })\n            postData('http://localhost:3000/requests', json)\n                .then(data => { //data - это данные которые возвращаются из Promise, те которые вернул сервер\n                    console.log(data);\n                    showThanksModal(message.success); //после заполнения и отправки данных показывается message.success\n                    statusMessage.remove();\n                }).catch(() => {\n                    showThanksModal(message.failure);\n                }).finally(() => { //finalyy - действие которое выполняется всегда, в независимости как выполнился код ранее\n                    form.reset(); //очищаем модальное окно от сообщения message \n                });\n\n            // request.addEventListener('load', () => {\n            //     if (request.status === 200) {\n            //         console.log(request.response);\n            //         showThanksModal(message.success); //после заполнения и отправки данных показывается message.success\n            //         form.reset(); //очищаем модальное окно от сообщения message после его отправки\n            //         statusMessage.remove();\n            //     } else {\n            //         showThanksModal(message.failure);\n            //     }\n            // });\n        });\n    }\n\n    function showThanksModal(message) { //показ окна благодарности после отправки данных\n        let prevModalDialog = document.querySelector('.modal__dialog');\n        prevModalDialog.classList.add('hide');\n        openModal('.modal', modalTimerId);\n\n        let thanksModal = document.createElement('div');\n        thanksModal.classList.add('modal__dialog');\n        thanksModal.innerHTML = `\n            <div class=\"modal__content\">\n                <div class=\"modal__close\" data-close>×</div>\n                <div class=\"modal__title\">${message}</div>\n            </div>\n        `;\n\n        document.querySelector('.modal').append(thanksModal);\n        setTimeout(() => {\n            thanksModal.remove();\n            prevModalDialog.classList.add('show');\n            prevModalDialog.classList.remove('hide');\n            closeModal('.modal');\n        }, 4000);\n    }\n\n    fetch('http://localhost:3000/menu')\n        .then(data => data.json());\n}\n\nexport default forms;","function openModal(modalSelector, modalTimerId) {\n    const modal = document.querySelector(modalSelector);\n    modal.classList.add('show');\n    modal.classList.remove('hide');\n    document.body.style.overflow = 'hidden'; //убираем проктурку при открытом модальном окне\n    // modal.classList.toggle('show'); альтернативный вариант показа модального окна, при помощи toggle\n\n    if (modalTimerId) {\n        clearInterval(modalTimerId); //отключаем повторный показ модального окна после его закрытия\n    }\n}\n\nfunction closeModal(modalSelector) {\n    const modal = document.querySelector(modalSelector);\n    modal.classList.add('hide');\n    modal.classList.remove('show');\n    document.body.style.overflow = '';\n    // modal.classList.toggle('show'); альтернативный вариант показа модального окна, при помощи toggle\n}\n\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\n    let modalTrigger = document.querySelectorAll(triggerSelector), //получаем доступ к дата-атрибуту через []\n        modal = document.querySelector(modalSelector);\n\n\n    modalTrigger.forEach(btn => { //исп forEach так как modalTrigger - это псевдомассив(querySelectorAll)\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\n    });\n\n\n    // modalCloseBtn.addEventListener('click', closeModal); //удаляем строку и добавляем условие \n    modal.addEventListener('click', (e) => { //при клике на свободном пространстве модал окно закрывается\n        if (e.target === modal || e.target.getAttribute('data-close') == '') { //если мы клаикаем на подложку или на крестик модальное окно закрывается\n            closeModal(modalSelector);\n        }\n    });\n    document.addEventListener(\"keydown\", (e) => {\n        if (e.code === \"Escape\" && modal.classList.contains('show')) { //при помощи contains('show') escape юудет срабатывать только в случае открытого модально окна\n            closeModal(modalSelector);\n        }\n    });\n\n    function showModalByScroll() { //если прокрученная часть страницы и видимая на текущий момент часть страницы больше или равна общей высоте страницы то показываем модальное окно \n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n            openModal(modalSelector, modalTimerId);\n            window.removeEventListener('scroll', showModalByScroll); //после пролистывания страницы и открытия модального окна удаляем это событие чтобы не повторялось каждый раз\n        }\n    }\n\n    window.addEventListener('scroll', showModalByScroll); //показ модального окна после прокрутки всей страницы\n}\n\nexport default modal;\nexport { closeModal };\nexport { openModal };","function slides({ container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field }) {\n\n    const slides = document.querySelectorAll(container), // доступ к классу со слайдами\n        slider = document.querySelector(slide), //доступ к слайдам для установки position-relative и добавления точек\n        prev = document.querySelector(prevArrow), // доступ к стрелочке предыдущий\n        next = document.querySelector(nextArrow), // доступ к стрелочке следующий\n        total = document.querySelector(totalCounter), //кол-во слайдов\n        current = document.querySelector(currentCounter), //текущий слайд\n        slidesWrapper = document.querySelector(wrapper),\n        slidesField = document.querySelector(field), //поле с нашими слайдами\n        width = window.getComputedStyle(slidesWrapper).width; //получаем ширину окна со слайдами\n\n\n    let slideIndex = 1; //первый номер в нумерации слайдов\n    let offset = 0; //отступ\n\n    if (slides.length < 10) { //если кол-во слайдов будет меньше 10\n        total.textContent = `0${slides.length}`; // то мы добавляем ноль к цифре текущего слайда\n        current.textContent = `0${slideIndex}`;\n    } else {\n        total.textContent = slides.length;\n        current.textContent = slideIndex;\n    }\n\n    slidesField.style.width = 100 * slides.length + '%';\n    slidesField.style.display = 'flex';\n    slidesField.style.transition = '0.5s all';\n    // slidesField.style.cssText = `\n    //     width: 100 * slides.length + '%',\n    //     display: flex,\n    //     transition: 0.5s all\n    // `;\n\n    // console.log(slidesField);\n\n    slidesWrapper.style.overflow = 'hidden'; //ограничиваем показ слайда внутри wrapper\n\n    slides.forEach(slide => {\n        slide.style.width = width; //перебираем все слайды и делаем их одинаковой ширины\n    });\n\n    //Создаем точки на слайдере\n\n    slider.style.position = 'relative'; //уст для работы с точками\n\n    const dots = document.createElement('ol'),\n        array = [];\n    dots.classList.add('carousel-dots');\n    dots.style.cssText = `\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 15;\n        display: flex;\n        justify-content: center;\n        margin-right: 15%;\n        margin-left: 15%;\n        list-style: none;\n    `;\n    slider.append(dots); //помещаем созданные точки в слайдер\n\n    for (let i = 0; i < slides.length; i++) {\n        const dot = document.createElement('li'); // создаем точки внутри slides\n        dot.setAttribute('data-slide-to', i + 1); //устанавливаем каждой точке аттрибут data-slide-to(те к какому слайду она будет относиться)\n        dot.style.cssText = `\n            box-sizing: content-box;\n            flex: 0 1 auto;\n            width: 30px;\n            height: 6px;\n            margin-right: 3px;\n            margin-left: 3px;\n            cursor: pointer;\n            background-color: #fff;\n            background-clip: padding-box;\n            border-top: 10px solid transparent;\n            border-bottom: 10px solid transparent;\n            opacity: .5;\n            transition: opacity .6s ease;\n        `;\n        if (i == 0) {\n            dot.style.opacity = 1;\n        }\n        dots.append(dot);\n        array.push(dot);\n    }\n\n    function dotsVision() {\n        array.forEach(dot => dot.style.opacity = '.5');\n        array[slideIndex - 1].style.opacity = 1;\n    }\n\n    function slidesVision() {\n        if (slides.length < 10) {\n            current.textContent = `0${slideIndex}`;\n        } else {\n            current.textContent = slideIndex;\n        }\n    }\n\n    next.addEventListener('click', () => {\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) {\n            offset = 0; //означает что долистали до конца и надо вернуться в самое начало\n        } else {\n            offset += deleteNotDigits(width);\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`;\n\n        if (slideIndex == slides.length) {\n            slideIndex = 1;\n        } else {\n            slideIndex++;\n        }\n\n        slidesVision();\n        dotsVision();\n    });\n\n    prev.addEventListener('click', () => {\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) { //исп регулярные выражения\n            offset = 0; //означает что долистали до конца и надо вернуться в самое начало\n        } else {\n            offset += deleteNotDigits(width);\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`;\n\n        if (slideIndex == 1) {\n            slideIndex = slides.length;\n        } else {\n            slideIndex--;\n        }\n\n        dotsVision();\n        slidesVision();\n    });\n    array.forEach(dot => { //изменяем активный индикатор при клике мышкой на него\n        dot.addEventListener('click', (e) => {\n            const slideTo = e.target.getAttribute('data-slide-to');\n\n            slideIndex = slideTo;\n            offset = deleteNotDigits(width) * (slideTo - 1);\n\n            slidesField.style.transform = `translateX(-${offset}px)`;\n\n            dotsVision();\n            slidesVision();\n        });\n    });\n\n    function deleteNotDigits(str) {\n        return +str.replace(/\\D/g, ''); //исп регулярные выражения\n    }\n\n\n    //!Альтернативный вариант слайдов\n    // showSlides(slideIndex);\n\n    // if (slides.length < 10) { //если кол-во слайдов будет меньше 10\n    //     total.textContent = `0${slides.length}`; // то мы добавляем ноль к цифре текущего слайда\n    // } else {\n    //     total.textContent = slides.length;\n    // }\n\n    // function showSlides(n) { //функция показа слайдов, n-slideIndex, с текущим положением слайда\n    //     if (n > slides.length) {\n    //         slideIndex = 1;\n    //     }\n\n    //     if (n < 1) {\n    //         slideIndex = slides.length; //устанвливаем в посл элемент в слайдерах\n    //     }\n\n    //     slides.forEach(item => item.style.display = 'none'); //скрываем все слайды на странице\n    //     slides[slideIndex - 1].style.display = 'block'; //показываем текущий слайд\n\n    //     if (slides.length < 10) { //если кол-во слайдов будет меньше 10\n    //         current.textContent = `0${slideIndex}`; // то мы добавляем ноль к цифре текущего слайда\n    //     } else {\n    //         current.textContent = slideIndex;\n    //     }\n    // }\n\n    // function plusSlides(n) {\n    //     showSlides(slideIndex += n);\n    // }\n\n    // prev.addEventListener('click', () => {\n    //     plusSlides(-1);\n    // });\n    // next.addEventListener('click', () => {\n    //     plusSlides(1);\n    // });\n}\n\nexport default slides;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\n    let tabs = document.querySelectorAll(tabsSelector),\n        tabsContent = document.querySelectorAll(tabsContentSelector),\n        tabsParent = document.querySelector(tabsParentSelector);\n\n    function hideTabContent() { // скрываем табы со страницы   \n        tabsContent.forEach(item => { //скрываем весь контент который есть в классе tabcontent\n            item.classList.add('hide');\n            item.classList.remove('show', 'fade');\n        });\n        tabs.forEach(item => { //удаляем класс активности у каждого элемента tabs\n            item.classList.remove(activeClass);\n        });\n    }\n    hideTabContent();\n\n\n    function showTabContent(i = 0) { //i-это первый таб на странице\n        tabsContent[i].classList.add('show', 'fade');\n        tabsContent[i].classList.remove('hide');\n        tabs[i].classList.add(activeClass);\n    }\n    showTabContent();\n\n\n    tabsParent.addEventListener('click', (event) => {\n        let target = event.target;\n        if (target && target.classList.contains(tabsSelector.slice(1))) { //удаляем точку у класса '.tabheader__item', который передается аргументом\n            tabs.forEach((item, i) => {\n                if (target == item) {\n                    hideTabContent();\n                    showTabContent(i); //сюда передаем номер элемента, который совпал при переборе\n                }\n            });\n        }\n    });\n}\n\nexport default tabs;","function timer(id, deadline) {\n\n    function getTimeRemaining(endtime) { //определяет разницу между текущим временем и окончанием акции\n        let t = Date.parse(endtime) - Date.parse(new Date()),\n            days = Math.floor(t / (1000 * 60 * 60 * 24)),\n            hours = Math.floor((t / (1000 * 60 * 60) % 24)),\n            minutes = Math.floor((t / 1000 / 60) % 60),\n            seconds = Math.floor((t / 1000) % 60);\n\n        return {\n            'total': t,\n            'days': days,\n            'hours': hours,\n            'minutes': minutes,\n            'seconds': seconds\n        };\n    }\n\n    function getZero(num) { //подставляем ноль если в таймере одиночная цифра\n        if (num >= 0 && num < 10) {\n            return `0${num}`;\n        } else {\n            return num;\n        }\n    }\n\n    function setClock(selector, endtime) { // устанавливаем таймер на страницу(endtime - ёто переменная deadline)\n        let timer = document.querySelector(selector),\n            days = timer.querySelector('#days'),\n            hours = timer.querySelector('#hours'),\n            minutes = timer.querySelector('#minutes'),\n            seconds = timer.querySelector('#seconds'),\n            timeInterval = setInterval(updateClock, 1000); //перезапускаем таймер каждую секунду\n        updateClock(); //заускаем чтобы не ждать 1 сек перезапуск таймера\n\n        function updateClock() {\n            let t = getTimeRemaining(endtime);\n\n            days.innerHTML = getZero(t.days); //данные приходят из return в getTimeRemaining + передаем в getZero значения часов, минут и секунд\n            hours.innerHTML = getZero(t.hours);\n            minutes.innerHTML = getZero(t.minutes);\n            seconds.innerHTML = getZero(t.seconds);\n\n            if (t.total <= 0) { //если время вышло(меньше или равно 0) останавливаем таймер \n                clearInterval(timeInterval);\n            }\n        }\n    }\n    setClock(id, deadline);\n}\n\nexport default timer;","const postData = async(url, data) => { //async-значит что код асинхронный.создаем запрос, когда создаем ф-цию postData, туда передается url, который передается в fetch\n    const res = await fetch(url, { // await-дает время дождаться выполнения какого учатска кода и получить ответ от сервера, первым арг передаем url, чтобы ссылаться на какой то сервер\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: data\n    });\n    return await res.json(); //возвращается promise\n};\n\nconst getResourse = async(url) => { //делаем запрос\n    const res = await fetch(url); //дожидаемся окончания\n    if (!res.ok) {\n        throw new Error(`could not fetch ${url}, status: ${res.status}`);\n    }\n    return await res.json(); //возвращается promise\n};\n\nexport { getResourse };\nexport { postData };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\nimport calc from './modules/calc';\nimport forms from './modules/forms';\nimport modal from './modules/modal';\nimport slides from './modules/slides';\nimport timer from './modules/timer';\nimport cards from './modules/cards';\nimport { openModal } from './modules/modal';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    let modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 30000); //появление модального окна спустя какое-то время\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\n    calc();\n    forms('form', modalTimerId);\n    modal('[data-modal]', '.modal', modalTimerId);\n    timer('.timer', '2022-06-01');\n    cards();\n    slides({\n        container: '.offer__slide',\n        nextArrow: '.offer__slider-next',\n        slide: '.offer__slider',\n        prevArrow: '.offer__slider-prev',\n        totalCounter: '#total',\n        currentCounter: '#current',\n        wrapper: '.offer__slider-wrapper',\n        field: '.offer__slider-inner'\n    });\n});"],"names":[],"sourceRoot":""}